name: wtc
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.1.2+15

environment:
  sdk: ">=2.12.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  fluttertoast: ^8.0.8
  connectivity: ^3.0.6
  lottie: ^1.2.1
  path_provider: ^2.0.6
  photo_manager: ^2.1.4
  camera: ^0.9.4+5
  pagination_view: ^2.0.0
  image_picker: ^0.8.4+4
  image_cropper: ^1.4.1
  permission_handler: ^8.3.0
  mime_type: ^1.0.0
  http: ^0.13.4
  cached_network_image: ^3.1.0+1
  intl: ^0.17.0
  flutter_launcher_icons: ^0.9.2
  uni_links: ^0.5.1
  url_launcher: ^6.1.7
  translator: ^0.1.7
  # state-management
  get: ^4.6.1
  get_storage: ^2.0.3
  google_sign_in: ^5.2.3
  sign_in_with_apple: ^3.2.0
  flutter_facebook_auth: ^4.4.1
  flutter_keychain: ^2.1.0
  flutter_branch_sdk: ^4.0.0
  share_plus: ^4.0.10
  firebase_core: ^1.11.0
  firebase_auth: ^3.3.6
#  admob_flutter: ^3.0.0
flutter_icons:
  android: true
  ios: true
  image_path: "assets/screen_icon/screen_icon.png"
dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_native_splash: ^1.3.1
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/lottie/splashLottie.json
    - assets/backgrounds/
    - assets/icons/
    - assets/offline_image/
    - assets/screen_icon/
    - assets/WTC-loader.json

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: calibri
      fonts:
        - asset: assets/fonts/calibri/Calibre-Regular.ttf
        - asset: assets/fonts/calibri/Calibre-Medium.ttf
          weight: 500
        - asset: assets/fonts/calibri/Calibre-Semibold.ttf
          weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


flutter_native_splash:
  background_image: "assets/backgrounds/splashBG.png"
  background_image_dark: "assets/backgrounds/splashBG.png"
  android: true
  ios: true
  web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true
